/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lab17;

import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class mainFrame extends javax.swing.JFrame implements LibraryObserver {

    private ResourceBundle bundle;
    private ResourceBundle bundleFR;
    private LibraryController libraryController;

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
//            Book book = new Book("Robert", "Munsch", "Smelly Socks");
//            Book book2 = new Book("Harper", "Lee", "To Kill a MockingBird");
//            Book book3 = new Book("Markus", "Zusak", "The Book Thief");
//            Book book4 = new Book("George", "Orwell", "1984");
//            DatabaseManager.addBook(book);
//            DatabaseManager.addBook(book2);
//            DatabaseManager.addBook(book3);
//            DatabaseManager.addBook(book4);
        bundle = ResourceBundle.getBundle("FormLanguage");
        bundleFR = ResourceBundle.getBundle("FormLanguage", Locale.FRANCE);
        Library.getInstance().registerObserver(this);

    }

    private void setBookListModel(List<Book> books) {
        DefaultListModel<String> bookListModel = new DefaultListModel<>();
        for (Book book : books) {
            bookListModel.addElement(book.getTitle() + ", " + book.getAuthorFName() + " " + book.getAuthorLName());  // Assuming you have a getTitle() method in Book class

        }
        bookList.setModel(bookListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        libraryLabel = new javax.swing.JLabel();
        takeBookButton = new javax.swing.JButton();
        bookListPanel = new javax.swing.JScrollPane();
        bookList = new javax.swing.JList<>();
        authorFNameLabel = new javax.swing.JLabel();
        authorLNameLabel = new javax.swing.JLabel();
        bookTitleLabel = new javax.swing.JLabel();
        fnameTextField = new javax.swing.JTextField();
        lnameTextField = new javax.swing.JTextField();
        bookTitleTextField = new javax.swing.JTextField();
        enButton = new javax.swing.JButton();
        frButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        libraryLabel.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        libraryLabel.setText("Library");

        takeBookButton.setText("Take Book");
        takeBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeBookButtonActionPerformed(evt);
            }
        });

        bookListPanel.setViewportView(bookList);

        authorFNameLabel.setLabelFor(fnameTextField);
        authorFNameLabel.setText("Author First Name");

        authorLNameLabel.setText("Author Last Name");

        bookTitleLabel.setText("Book Title:");

        enButton.setText("English");
        enButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enButtonActionPerformed(evt);
            }
        });

        frButton.setText("French");
        frButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(libraryLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(takeBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(authorLNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(authorFNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                .addComponent(bookTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fnameTextField)
                                .addComponent(lnameTextField)
                                .addComponent(bookTitleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(enButton)
                        .addGap(18, 18, 18)
                        .addComponent(frButton)
                        .addGap(43, 43, 43))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {enButton, frButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(libraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorFNameLabel)
                            .addComponent(fnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorLNameLabel)
                            .addComponent(lnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookTitleLabel)
                            .addComponent(bookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frButton)
                    .addComponent(enButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(takeBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void takeBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeBookButtonActionPerformed
        // TODO add your handling code here:
        String firstName = fnameTextField.getText().trim();
        String lastName = lnameTextField.getText().trim();
        String title = bookTitleTextField.getText().trim();

        // Check if all fields are filled
        if (!firstName.isEmpty() && !lastName.isEmpty() && !title.isEmpty()) {
            Book bookToRemove = findBookByDetails(firstName, lastName, title);

            if (bookToRemove != null) {
                DatabaseManager.removeBook(bookToRemove);
                Library.getInstance().removeBook(bookToRemove);
                setBookListModel(Library.getInstance().getBooks());
//                JOptionPane.showMessageDialog(this, "Book was removed");
            } else {
                JOptionPane.showMessageDialog(this, "Book not found in the library.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all fields to remove a book.");
        }

    }//GEN-LAST:event_takeBookButtonActionPerformed

    private void enButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enButtonActionPerformed
        // TODO add your handling code here:
        libraryLabel.setText(bundle.getString("Library"));
        authorFNameLabel.setText(bundle.getString("AuthorFirstName"));
        authorLNameLabel.setText(bundle.getString("AuthorLastName"));
        bookTitleLabel.setText(bundle.getString("BookTitle"));
        takeBookButton.setText(bundle.getString("TakeBook"));
    }//GEN-LAST:event_enButtonActionPerformed

    private void frButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frButtonActionPerformed
        // TODO add your handling code here:
        libraryLabel.setText(bundleFR.getString("Library"));
        authorFNameLabel.setText(bundleFR.getString("AuthorFirstName"));
        authorLNameLabel.setText(bundleFR.getString("AuthorLastName"));
        bookTitleLabel.setText(bundleFR.getString("BookTitle"));
        takeBookButton.setText(bundleFR.getString("TakeBook"));
    }//GEN-LAST:event_frButtonActionPerformed
    private Book findBookByDetails(String firstName, String lastName, String title) {
        for (Book book : Library.getInstance().getBooks()) {
            if (book.getAuthorFName().equalsIgnoreCase(firstName)
                    && book.getAuthorLName().equalsIgnoreCase(lastName)
                    && book.getTitle().equalsIgnoreCase(title)) {
                return book;
            }
        }
        return null;  // Return null if no match is found
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    public void setLibraryController(LibraryController libraryController) {
        this.libraryController = libraryController;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorFNameLabel;
    private javax.swing.JLabel authorLNameLabel;
    public javax.swing.JList<String> bookList;
    private javax.swing.JScrollPane bookListPanel;
    private javax.swing.JLabel bookTitleLabel;
    private javax.swing.JTextField bookTitleTextField;
    private javax.swing.JButton enButton;
    public javax.swing.JTextField fnameTextField;
    private javax.swing.JButton frButton;
    private javax.swing.JLabel libraryLabel;
    private javax.swing.JTextField lnameTextField;
    private javax.swing.JButton takeBookButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateBookRemoved(Book book) {
        setBookListModel(Library.getInstance().getBooks());
        JOptionPane.showMessageDialog(this, "Book was removed");
    }
}
